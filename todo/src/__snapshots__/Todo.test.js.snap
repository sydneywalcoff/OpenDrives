// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`todo Header matches snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <h1
        class="Todo-header"
      >
        Todo list
      </h1>
    </div>
  </body>,
  "container": <div>
    <h1
      class="Todo-header"
    >
      Todo list
    </h1>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`todo List Item matches snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <li
        class="Todo-item"
        data-testid="todo-item"
      >
        <span
          aria-hidden="true"
          class="icon"
          data-testid="todo-status"
        >
          [  ]
        </span>
        <div
          class="undone"
          data-testid="todo-status-class"
        >
          learn react
        </div>
        <button
          class="close"
          data-testid="todo-button"
          type="button"
        >
          ×
        </button>
      </li>
    </div>
  </body>,
  "container": <div>
    <li
      class="Todo-item"
      data-testid="todo-item"
    >
      <span
        aria-hidden="true"
        class="icon"
        data-testid="todo-status"
      >
        [  ]
      </span>
      <div
        class="undone"
        data-testid="todo-status-class"
      >
        learn react
      </div>
      <button
        class="close"
        data-testid="todo-button"
        type="button"
      >
        ×
      </button>
    </li>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`todo list matches snpashot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <ul
        class="Todo-group"
        data-testid="todo-list"
      >
         
        <li
          class="Todo-item"
          data-testid="todo-item"
        >
          <span
            aria-hidden="true"
            class="icon"
            data-testid="todo-status"
          >
            [  ]
          </span>
          <div
            class="undone"
            data-testid="todo-status-class"
          >
            learn react
          </div>
          <button
            class="close"
            data-testid="todo-button"
            type="button"
          >
            ×
          </button>
        </li>
        <li
          class="Todo-item"
          data-testid="todo-item"
        >
          <span
            aria-hidden="true"
            class="icon"
            data-testid="todo-status"
          >
            [  ]
          </span>
          <div
            class="undone"
            data-testid="todo-status-class"
          >
            brush teeth
          </div>
          <button
            class="close"
            data-testid="todo-button"
            type="button"
          >
            ×
          </button>
        </li>
        <li
          class="Todo-item"
          data-testid="todo-item"
        >
          <span
            aria-hidden="true"
            class="icon"
            data-testid="todo-status"
          >
            [X]
          </span>
          <div
            class="done"
            data-testid="todo-status-class"
          >
            walk dog
          </div>
          <button
            class="close"
            data-testid="todo-button"
            type="button"
          >
            ×
          </button>
        </li>
         
      </ul>
    </div>
  </body>,
  "container": <div>
    <ul
      class="Todo-group"
      data-testid="todo-list"
    >
       
      <li
        class="Todo-item"
        data-testid="todo-item"
      >
        <span
          aria-hidden="true"
          class="icon"
          data-testid="todo-status"
        >
          [  ]
        </span>
        <div
          class="undone"
          data-testid="todo-status-class"
        >
          learn react
        </div>
        <button
          class="close"
          data-testid="todo-button"
          type="button"
        >
          ×
        </button>
      </li>
      <li
        class="Todo-item"
        data-testid="todo-item"
      >
        <span
          aria-hidden="true"
          class="icon"
          data-testid="todo-status"
        >
          [  ]
        </span>
        <div
          class="undone"
          data-testid="todo-status-class"
        >
          brush teeth
        </div>
        <button
          class="close"
          data-testid="todo-button"
          type="button"
        >
          ×
        </button>
      </li>
      <li
        class="Todo-item"
        data-testid="todo-item"
      >
        <span
          aria-hidden="true"
          class="icon"
          data-testid="todo-status"
        >
          [X]
        </span>
        <div
          class="done"
          data-testid="todo-status-class"
        >
          walk dog
        </div>
        <button
          class="close"
          data-testid="todo-button"
          type="button"
        >
          ×
        </button>
      </li>
       
    </ul>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
